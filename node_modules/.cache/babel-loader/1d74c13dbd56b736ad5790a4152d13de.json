{"ast":null,"code":"var _jsxFileName = \"/Users/andresmontero/Desktop/UNI/betOven/myExample/log-nav copy/log-nav/src/components/shared/Auth.js\";\nimport React, { useState, useEffect } from 'react';\nimport { apiRequest } from '../../services/api';\nexport const AuthContext = React.createContext();\nexport const LOCAL_STORAGE_KEY = `${process.env.REACT_APP_STORAGE_KEY}`;\n\nconst Auth = ({\n  children\n}) => {\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  const setCurrentUser = newUser => {\n    setUser(newUser);\n\n    if (!newUser) {\n      localStorage.removeItem(LOCAL_STORAGE_KEY);\n    }\n  };\n\n  useEffect(() => {\n    const authenticate = async () => {\n      try {\n        const response = await apiRequest({\n          path: \"/auth/validate_token\"\n        });\n\n        if (response.status === 200) {\n          setCurrentUser(response.data.data);\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        setInitialLoading(false);\n      }\n    };\n\n    authenticate();\n  }, []);\n\n  if (initialLoading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  const context = {\n    user,\n    setCurrentUser\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children(context.user));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/andresmontero/Desktop/UNI/betOven/myExample/log-nav copy/log-nav/src/components/shared/Auth.js"],"names":["React","useState","useEffect","apiRequest","AuthContext","createContext","LOCAL_STORAGE_KEY","process","env","REACT_APP_STORAGE_KEY","Auth","children","initialLoading","setInitialLoading","user","setUser","setCurrentUser","newUser","localStorage","removeItem","authenticate","response","path","status","data","e","console","error","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;AACP,OAAO,MAAMC,iBAAiB,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,EAA/D;;AAEP,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMe,cAAc,GAAGC,OAAO,IAAI;AAC9BF,IAAAA,OAAO,CAACE,OAAD,CAAP;;AAEA,QAAI,CAACA,OAAL,EAAc;AACVC,MAAAA,YAAY,CAACC,UAAb,CAAwBb,iBAAxB;AACH;AACJ,GAND;;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMlB,UAAU,CAAC;AAAEmB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAjC;;AAEA,YAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBP,UAAAA,cAAc,CAACK,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAd;AACH;AACJ,OAND,CAME,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,OARD,SAQU;AACNZ,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ,KAZD;;AAaAO,IAAAA,YAAY;AACf,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIR,cAAJ,EAAoB;AAChB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAED,QAAMgB,OAAO,GAAG;AAAEd,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAhB;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEY,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,QAAQ,CAACiB,OAAO,CAACd,IAAT,CADb,CADJ;AAKH,CAxCD;;AA0CA,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiRequest } from '../../services/api';\n\nexport const AuthContext = React.createContext();\nexport const LOCAL_STORAGE_KEY = `${process.env.REACT_APP_STORAGE_KEY}`;\n\nconst Auth = ({ children }) => {\n    const [initialLoading, setInitialLoading] = useState(true);\n    const [user, setUser] = useState(null);\n\n    const setCurrentUser = newUser => {\n        setUser(newUser);\n\n        if (!newUser) {\n            localStorage.removeItem(LOCAL_STORAGE_KEY);\n        }\n    };\n\n    useEffect(() => {\n        const authenticate = async () => {\n            try {\n                const response = await apiRequest({ path: \"/auth/validate_token\" });\n\n                if (response.status === 200) {\n                    setCurrentUser(response.data.data);\n                }\n            } catch (e) {\n                console.error(e);\n            } finally {\n                setInitialLoading(false);\n            }\n        };\n        authenticate();\n    }, []);\n\n    if (initialLoading) {\n        return <h4>Loading...</h4>;\n    }\n\n    const context = { user, setCurrentUser} ;\n\n    return (\n        <AuthContext.Provider value={context}>\n            {children(context.user)}\n        </AuthContext.Provider>\n    )\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}